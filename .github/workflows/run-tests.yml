name: run-tests

on:
  push:
    paths:
      - "**.php"
      - ".github/workflows/run-tests.yml"
      - "phpunit.xml.dist"
      - "composer.json"
      - "composer.lock"

jobs:
  # Linux Job — supports all DBs
  test-linux:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    strategy:
      fail-fast: false
      matrix:
        php: [8.2, 8.3, 8.4]
        laravel: [10.*, 11.*, 12.*]
        stability: [prefer-stable]
        db: [mysql, pgsql, sqlite]
        include:
          - laravel: 10.*
            testbench: 8.*
            carbon: ^2.63
          - laravel: 11.*
            testbench: 9.*
            carbon: ^3.8.4
          - laravel: 12.*
            testbench: 10.*
            carbon: ^3.8.4

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - DB:${{ matrix.db }} - ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: testing
          MYSQL_USER: ci_user
          MYSQL_PASSWORD: ci_pass
          MYSQL_ROOT_PASSWORD: root
        ports: ["3306:3306"]
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      pgsql:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ env.DB_DATABASE }}
          POSTGRES_USER: ${{ env.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      DB_CONNECTION: ${{ matrix.db }}
      DB_HOST: 127.0.0.1
      DB_DATABASE: testing
      DB_USERNAME: ci_user
      DB_PASSWORD: ci_pass
      DB_PORT: ${{ matrix.db == 'mysql' && '3306' || matrix.db == 'pgsql' && '5432' || '' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" "nesbot/carbon:${{ matrix.carbon }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: List Installed Dependencies
        run: composer show -D

      - name: Execute tests
        run: composer test

  # Windows Job — SQLite only
  test-windows:
    runs-on: windows-latest
    timeout-minutes: 5
    strategy:
      fail-fast: true
      matrix:
        php: [8.2, 8.3, 8.4]
        laravel: [11.*, 12.*]
        stability: [prefer-stable]
        include:
          - laravel: 11.*
            testbench: 9.*
            carbon: ^3.8.4
          - laravel: 12.*
            testbench: 10.*
            carbon: ^3.8.4

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - window-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" "nesbot/carbon:^^^${{ matrix.carbon }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: List Installed Dependencies
        run: composer show -D

      - name: Execute tests
        run: composer test
